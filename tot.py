import logging
import telebot
from telebot import types
import requests

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
API_TOKEN = '8005807698:AAGyPSIAkGksY9aNxuvPB9T88sL3vTZ8sfY'
bot = telebot.TeleBot(API_TOKEN)

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –§—É–Ω–∫—Ü–∏—è-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é
def get_bot_response(user_text: str) -> str:
    """
    –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API –≤–∞—à–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.
    –ü—Ä–∏–º–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º requests:
    response = requests.post(
        'https://your-neural-api.com/generate',
        headers={'Authorization': 'Bearer YOUR_API_KEY'},
        json={'text': user_text}
    )
    if response.status_code == 200:
        data = response.json()
        return data.get('reply', '–ù–µ–π—Ä–æ—Å–µ—Ç—å –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç')
    else:
        return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏'
    """
    # TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –≤–∞—à–µ–π –ù–°
    return '–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏'

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('üí¨ –ß–∞—Ç')
    markup.row('üóì –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫', 'üìö –£—á—ë–±–∞')
    markup.row('‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ', 'üòÇ –ú–µ–º—ã')
    return markup

@bot.message_handler(commands=['start'])
def handle_start(message):
    logger.info(f"/start –æ—Ç {message.from_user.id}")
    text = (
        "–ü—Ä–∏–≤–µ—Ç, —è —Ç–≤–æ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫-–¢–û–¢! "
        "–£ —Ç–µ–±—è –æ—Ç–∫—Ä—ã–ª–æ—Å—å –º–µ–Ω—é, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –º–æ–∂–µ—à—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–æ –º–Ω–æ–π, "
        "—É–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!"
    )
    bot.send_message(message.chat.id, text, reply_markup=main_menu())

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —á–∞—Ç–∞
@bot.message_handler(func=lambda m: m.text == 'üí¨ –ß–∞—Ç')
def handle_chat(message):
    bot.send_message(message.chat.id, "–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–µ–∂–∏–º —á–∞—Ç–∞. –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ, –∏ —è –æ—Ç–≤–µ—á—É!")

# –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –≤—Å—ë, —á—Ç–æ –Ω–µ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(func=lambda m: True)
def handle_all_messages(message):
    user_text = message.text
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –æ—Ç {message.from_user.id}: {user_text}")
    bot.send_chat_action(message.chat.id, 'typing')

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ù–°
    reply = get_bot_response(user_text)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(message.chat.id, reply)

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, –æ–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏–π‚Ä¶")
    bot.infinity_polling(timeout=10, long_polling_timeout=5)
